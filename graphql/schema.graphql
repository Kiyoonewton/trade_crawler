scalar Timestamp @scalar(class: "App\\GraphQL\\Scalars\\Timestamp")

### queries
type Query {
    oneSeason(seasonId: ID! @eq): Season @find
    allSeason: [Season!]! @all
}

#### mutations
type Mutation {
    createSeason(seasonId: ID!): SeasonInput
        @field(resolver: "App\\GraphQL\\Mutations\\SeasonMutation@createSeason")
}

#### data types
type SeasonInput {
    seasonId: String!
}

type Season {
    seasonId: String!
    matchDays: [MatchDay]
}

type MatchDay {
    index: Int
    queryUrl: String
    timestamp: Timestamp
    outcome: [Outcome]
}

type Outcome {
    home: String
    away: String
    market: Market
}

type Team {
    name: String
    score: String
    points: Int
    goalFor: Int
    goalAgainst: Int
}

type Market {
    winordraw: [WinorDraw]
    total: [Total]
}

type WinorDraw {
    type: String
    odds: String
    result: Int
}

type Total {
    type: String
    over: TotalOdd
    under: TotalOdd
}

type TotalOdd {
    odds: String
    result: Int
}
